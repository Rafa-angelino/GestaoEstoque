@page "/addinventory"

@inject NavigationManager NavigationManager
@inject IAddInventoryUseCase AddInventoryUseCase

@attribute [Authorize(Policy = "Inventory")]

<h3>Adicionar Inventário</h3>
<br />
<EditForm Model="inventory" OnValidSubmit="SaveInventory">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="form-group">
        <label for="name">Descrição</label>
        <InputText 
            id="name" 
            @bind-Value="inventory.InventoryName" 
            class="form-control">
        </InputText>
    </div>
    <div class="form-group">
        <label for="name">Quantidade</label>
        <InputNumber id="name"
                   @bind-Value="inventory.Quantity"
                   class="form-control">
        </InputNumber>
    </div>
    <div class="form-group">
        <label for="name">Preço do inventário</label>
        <InputNumber id="name"
                     @bind-Value="inventory.Price"
                     class="form-control">
        </InputNumber>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Salvar</button>
    <button type="button" class="btn btn-primary" @onclick="Cancel">Cancelar</button>
</EditForm>

@code {
    private Inventory inventory = new Inventory();

    private async Task SaveInventory()
    {
        await AddInventoryUseCase.ExecuteAsync(inventory);
        NavigationManager.NavigateTo("/inventories");

    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/inventories");
    }
}
